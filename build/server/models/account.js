// Generated by CoffeeScript 1.8.0
var Account, Imap, Mailbox, Promise, americano;

Mailbox = require('./mailbox');

Imap = require('../processes/imap_processes');

Promise = require('bluebird');

americano = require('americano-cozy');

module.exports = Account = americano.getModel('Account', {
  label: String,
  login: String,
  password: String,
  smtpServer: String,
  smtpPort: Number,
  imapServer: String,
  imapPort: Number,
  mailboxes: function(x) {
    return x;
  }
});

Account.getAll = function(callback) {
  return Account.request('all', callback);
};

Account.listWithMailboxes = function() {
  return Account.requestPromised('all').map(function(account) {
    return account.includeMailboxes();
  });
};

Account.refreshAllAccounts = function() {
  return Promise.serie(Account.getAllPromised(), function(account) {
    return Imap.fetchAccount(account);
  });
};

Account.prototype.fetchMails = function() {
  return Imap.fetchAccount(this);
};

Account.prototype.includeMailboxes = function() {
  return Mailbox.getClientTree(this.id).then((function(_this) {
    return function(mailboxes) {
      return _this.mailboxes = mailboxes;
    };
  })(this))["return"](this);
};

Account.createIfValid = function(data) {
  var account, rawBoxesTree;
  account = null;
  rawBoxesTree = null;
  return Imap.fetchBoxesTree(data).then(function(boxes) {
    console.log("GOT", boxes, "BOXES");
    rawBoxesTree = boxes;
    return Account.createPromised(data);
  }).then(function(created) {
    account = created;
    return Mailbox.createBoxesFromImapTree(account.id, rawBoxesTree);
  }).then(function() {
    console.log("CREATED ACCOUNT & BOXES");
    return account.includeMailboxes();
  });
};

Promise.promisifyAll(Account, {
  suffix: 'Promised'
});

Promise.promisifyAll(Account.prototype, {
  suffix: 'Promised'
});
