// Generated by CoffeeScript 1.8.0
var Account, HttpError, Imap, Mailbox, WrongConfigError, async, _, _ref;

async = require('async');

Account = require('../models/account');

Mailbox = require('../models/mailbox');

Imap = require('../processes/imap_processes');

_ = require('lodash');

_ref = require('../utils/errors'), WrongConfigError = _ref.WrongConfigError, HttpError = _ref.HttpError;

module.exports.create = function(req, res, next) {
  var accountCreated, data;
  data = req.body;
  accountCreated = Account.createIfValid(data);
  accountCreated.then(function(account) {
    return res.send(201, account);
  })["catch"](WrongConfigError, function(err) {
    throw new HttpError(401, err);
  })["catch"](next);
  return accountCreated.then(function(account) {
    return account.fetchMails()["catch"](function(err) {
      return console.log("FETCH MAIL FAILED", err.stack);
    });
  });
};

module.exports.fetch = function(req, res, next) {
  return Account.findPromised(req.params.accountID).then(function(account) {
    if (account) {
      return req.account = account;
    } else {
      throw new HttpError(404, 'Not Found');
    }
  }).nodeify(next);
};

module.exports.list = function(req, res, next) {
  return Account.listWithMailboxes().then(function(accounts) {
    return res.send(200, accounts);
  })["catch"](next);
};

module.exports.details = function(req, res, next) {
  return req.account.includeMailboxes().then(function() {
    return res.send(200, req.account);
  })["catch"](next);
};

module.exports.edit = function(req, res, next) {
  var changes;
  changes = _.pick(req.body, 'label', 'login', 'password', 'smtpServer', 'smtpPort', 'imapServer', 'imapPort');
  return req.account.updateAttributesPromised(changes).then(function(account) {
    return res.send(200, account);
  })["catch"](next);
};

module.exports.remove = function(req, res, next) {
  return req.account.destroyPromised().then(function() {
    return res.send(204);
  })["catch"](next);
};
